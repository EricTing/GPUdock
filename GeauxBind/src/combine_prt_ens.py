#!/usr/bin/env python

import glob
import argparse

'''
usage: combine_prt_ens.py [-h] [-d DIRECTORY] [-o OUTPUT]

combine modeller ensembles into one pdb file file names are in the form of
*.model.*.pdb by default

optional arguments:
-h, --help            show this help message and exit
-d DIRECTORY, --directory DIRECTORY
                      directory for the ensembles generated by Modeller
-o OUTPUT, --output OUTPUT
                      output pdb file containing all ensembles
'''

def extractAtoms(pdb_fn):
    lines = file(pdb_fn).readlines()
    return filter(lambda l: 'ATOM' in l, lines)


def main(work_dir, ofn, regx='*.model.*.pdb'):
    pattern = work_dir + regx
    models_paths = glob.glob(pattern)
    if not models_paths:
        raise Exception, "No modelled files found in %s" % work_dir
    with open(ofn, 'w') as f:
        for idx, fn in enumerate(models_paths):
            header = 'MODEL ' + str(idx) + "\n"
            atom_lines = ''.join(extractAtoms(fn))
            foot = "ENDMDL\n"
            f.writelines(header)
            f.writelines(atom_lines)
            f.writelines(foot)

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description="combine modeller ensembles into one pdb file\
    file names are in the form of *.model.*.pdb by default")

    parser.add_argument("-d", "--directory", type=str,
                        help="directory for the ensembles generated by Modeller")
    parser.add_argument("-o", "--output", type=str,
                        help="output pdb file containing all ensembles")

    # ofn = "/work/jaydy/tmp/1b9vA.pdb"
    # work_dir = '/work/jaydy/tmp/1b9vA/'
    # regx = work_dir + '*.model.*.pdb'

    args = parser.parse_args()

    work_dir = args.directory
    ofn = args.output

    regx = '*.model.*.pdb'

    main(work_dir, ofn, regx=regx)
